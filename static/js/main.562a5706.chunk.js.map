{"version":3,"sources":["utils/state-machine.js","services/movieshelf-api.js","components/Navigation/Navigation.module.css","components/PageHeading/PageHeading.js","utils/get-id-from-slug.js","components/MovieList/MovieList.js","components/PageHeading/PageHeading.module.css","components/GoBackButton/GoBackButton.module.css","components/MovieCard/MovieCard.module.css","components/SearchMoviesForm/SearchMoviesForm.module.css","components/MovieList/MovieList.module.css","components/Navigation/Navigation.js","components/GoBackButton/GoBackButton.js","components/MovieCard/MovieCard.js","views/MovieDetailsView/MovieDetailsView.js","components/SearchMoviesForm/SearchMoviesForm.js","views/MoviesView/MoviesView.js","App.js","index.js"],"names":["Status","IDLE","PENDING","RESOLVED","REJECTED","BASE_URL","API_KEY","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","mediaType","timeWindow","searchMoviesByKeyword","query","fetchMovieDetails","movieId","fetchActors","fetchReviewsForMovie","generateImageURL","filePath","w","module","exports","PageHeading","text","className","classes","title","getIdFromSlug","slug","match","makeIdentifier","id","string","slugify","lower","MovieList","movies","location","useLocation","list","map","to","pathname","state","from","Navigation","link","activeClassName","exact","GoBackButton","onGoBack","button","type","onClick","CastSubView","lazy","ReviewsSubView","MovieCard","movie","poster_path","original_title","overview","genres","useRouteMatch","path","src","movieShelfAPI","alt","poster","genre","name","fallback","MovieDetailsView","history","useHistory","useParams","useState","setMovie","status","setStatus","error","setError","useEffect","then","catch","push","message","SearchMoviesForm","onSubmit","searchQuery","setSearchQuery","event","preventDefault","trim","toast","value","onChange","target","toLowerCase","autoFocus","placeholder","MoviesView","foundMovies","setFoundMovies","URLSearchParams","search","get","results","HomeView","NotFoundView","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uGAOeA,IAPA,CACbC,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,a,uQCJNC,EAAW,+BACXC,EAAU,mCAEVC,EAAsB,uCAAG,4CAAAC,EAAA,6DAAOC,EAAP,+BAAa,GAAIC,EAAjB,+BAA0B,GAA1B,SACNC,MAAMF,EAAKC,GADL,YACvBE,EADuB,QAEbC,GAFa,iCAGnBD,EAASE,OAHU,gDAIzBC,QAAQC,OAAO,IAAIC,MAAM,cAJA,mFAAH,qDAOfC,EAAgB,eAACC,EAAD,uDAAa,QAASC,EAAtB,uDAAmC,OAAnC,OAC3Bb,EAAuB,GAAD,OACjBF,EADiB,qBACIc,EADJ,YACiBC,EADjB,oBACuCd,KAGlDe,EAAwB,SAACC,GAAD,OACnCf,EAAuB,GAAD,OACjBF,EADiB,iCACgBC,EADhB,4DAC2EgB,KAGtFC,EAAoB,SAACC,GAAD,OAC/BjB,EAAuB,GAAD,OACjBF,EADiB,kBACCmB,EADD,oBACoBlB,EADpB,qBAIXmB,EAAc,SAACD,GAAD,OACzBjB,EAAuB,GAAD,OACjBF,EADiB,kBACCmB,EADD,4BAC4BlB,EAD5B,qBAIXoB,EAAuB,SAACF,GAAD,OAClCjB,EAAuB,GAAD,OACjBF,EADiB,kBACCmB,EADD,4BAC4BlB,EAD5B,4BAIXqB,EAAmB,SAACC,GAAD,IAAWC,EAAX,uDAAe,IAAf,4CACCA,GADD,OACKD,K,iBCnCrCE,EAAOC,QAAU,CAAC,KAAO,yBAAyB,cAAc,yD,2FCMjDC,EAJK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,oBAAIC,UAAWC,IAAQC,MAAvB,SAA+BH,M,qCCDlDI,IAFO,SAACC,GAAD,OAAUA,EAAKC,MAAM,iBAAiB,K,2HCOtDC,EAAiB,SAACJ,EAAOK,GAAR,OAFLC,EAE6B,GAAD,OAAIN,EAAJ,YAAaK,GAF9BE,IAAQD,EAAQ,CAAEE,OAAO,IAArC,IAACF,GAsCHG,EAlCG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,EAAWC,cAEjB,OACE,oBAAId,UAAWC,IAAQc,KAAvB,SACGH,EAAOI,KAAI,YAAoB,IAAjBT,EAAgB,EAAhBA,GAAIL,EAAY,EAAZA,MACjB,OACE,6BACE,4BACE,cAAC,IAAD,CACEe,GAAI,CACFC,SAAS,WAAD,OAAaZ,EAAeJ,EAAOK,IAC3CY,MAAO,CAAEC,KAAMP,IAHnB,SAMGX,OAREK,U,iBCfnBX,EAAOC,QAAU,CAAC,MAAQ,6B,iBCA1BD,EAAOC,QAAU,CAAC,OAAS,+B,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,4B,gBCA3BD,EAAOC,QAAU,CAAC,gBAAgB,0C,iBCAlCD,EAAOC,QAAU,CAAC,KAAO,0B,6JCwBVwB,EArBI,kBACjB,gCACE,cAAC,IAAD,CACErB,UAAWC,IAAQqB,KACnBC,gBAAiBtB,IAAQ,eACzBgB,GAAG,IACHO,OAAK,EAJP,kBASA,cAAC,IAAD,CACExB,UAAWC,IAAQqB,KACnBC,gBAAiBtB,IAAQ,eACzBgB,GAAG,UAHL,wB,wCCJWQ,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnB,wBAAQ1B,UAAWC,IAAQ0B,OAAQC,KAAK,SAASC,QAASH,EAA1D,mB,iBCEII,EAAcC,gBAAK,kBACvB,gCAKIC,EAAiBD,gBAAK,kBAC1B,gCAqEaE,EAhEG,SAAC,GAEZ,IAAD,IADJC,MAASC,EACL,EADKA,YAAaC,EAClB,EADkBA,eAAgBC,EAClC,EADkCA,SAAUC,EAC5C,EAD4CA,OAEhD,EAAsBC,cAAdhE,EAAR,EAAQA,IAAKiE,EAAb,EAAaA,KAEb,OACE,oCACE,oCACE,qBACEC,IAAKC,IAA+BP,GACpCQ,IAAKP,EACLpC,UAAWC,IAAQ2C,SAErB,4BAAIP,OAGN,oCACE,wCACA,6BACGC,EAAOtB,KAAI,SAAC6B,GACX,OAAO,6BAAoBA,EAAMC,MAAjBD,EAAMtC,YAK5B,oCACE,wDAEA,eAAC,WAAD,CAAUwC,SAAU,4CAApB,UACE,6BACE,cAAC,IAAD,CAAS9B,GAAE,UAAK1C,EAAL,SAAX,oBAEF,cAAC,IAAD,CAAOiE,KAAI,UAAKA,EAAL,SAAX,SACE,cAACV,EAAD,SAIJ,eAAC,WAAD,CAAUiB,SAAU,4CAApB,UACE,6BACE,cAAC,IAAD,CAAS9B,GAAE,UAAK1C,EAAL,YAAX,uBAEF,cAAC,IAAD,CAAOiE,KAAI,UAAKA,EAAL,YAAX,SACE,cAACR,EAAD,gB,eCnDJjE,EAAsCD,IAAtCC,KAAMC,EAAgCF,IAAhCE,QAASE,EAAuBJ,IAAvBI,SAAUD,EAAaH,IAAbG,SA4ClB+E,EA1CU,WACvB,IAAMC,EAAUC,cACVrC,EAAWC,cACTV,EAAS+C,cAAT/C,KAER,EAA0BgD,mBAAS,MAAnC,mBAAOlB,EAAP,KAAcmB,EAAd,KACA,EAA4BD,mBAASrF,GAArC,mBAAOuF,EAAP,KAAeC,EAAf,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMnE,EAAUa,YAAcC,GAE9BsD,qBAAU,WACRH,EAAUvF,GACV0E,IACqBpD,GAClBqE,MAAK,SAACzB,GACLmB,EAASnB,GACTqB,EAAUtF,MAEX2F,OAAM,SAACJ,GACNC,EAASD,GACTD,EAAUrF,QAEb,CAACoB,IAMJ,OACE,qCACE,cAACQ,EAAA,EAAD,CACEC,KAAMuD,IAAWrF,EAAWiE,EAAME,eAA5B,uBAAwD9C,KAEhE,cAAC,EAAD,CAAcoC,SATG,WAAO,IAAD,IACzBuB,EAAQY,KAAR,iBAAahD,QAAb,IAAaA,GAAb,UAAaA,EAAUM,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,QASnCkC,IAAWtF,GAAW,2CACtBsF,IAAWpF,GAAY,4BAAIsF,EAAMM,UACjCR,IAAWrF,GAAY,cAAC,EAAD,CAAWiE,MAAOA,Q,iCCPjC6B,EAnCU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,EAAsCZ,mBAAS,IAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KAgBA,OACE,uBAAMF,SAXa,SAACG,GAEpB,GADAA,EAAMC,iBACqB,KAAvBH,EAAYI,OACd,OAAOC,IAAMd,MAAM,yCAGrBQ,EAASC,GACTC,EAAe,KAIf,UACE,uBACEtC,KAAK,OACL2C,MAAON,EACPO,SAnBoB,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACrCL,EAAeK,EAAMG,gBAmBjBC,WAAS,EACTC,YAAY,kBAEd,wBAAQhD,KAAK,SAAS5B,UAAWC,IAAQ,iBAAzC,wB,QCzBElC,EAAsCD,IAAtCC,KAAMC,EAAgCF,IAAhCE,QAASE,EAAuBJ,IAAvBI,SAAUD,EAAaH,IAAbG,SA6ClB4G,EA3CI,WAAO,IAAD,EACvB,EAAsCzB,mBAAS,MAA/C,mBAAO0B,EAAP,KAAoBC,EAApB,KACA,EAA4B3B,mBAASrF,GAArC,mBAAOuF,EAAP,KAAeC,EAAf,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMR,EAAUC,cACVrC,EAAWC,cAMXmD,EAAW,UAAG,IAAIe,gBAAgBnE,EAASoE,QAAQC,IAAI,gBAA5C,QAAwD,GAoBzE,OAlBAxB,qBAAU,WACHO,IAILV,EAAUvF,GACV0E,IACyBuB,GACtBN,MAAK,YAAkB,IAAfwB,EAAc,EAAdA,QACPJ,EAAeI,GACf5B,EAAUtF,MAEX2F,OAAM,SAACJ,GACNC,EAASD,GACTD,EAAUrF,SAEb,CAAC+F,IAGF,qCACE,cAACnE,EAAA,EAAD,CAAaC,KAAK,sBAClB,cAAC,EAAD,CAAkBiE,SA3BD,SAAC5E,GACpB6D,EAAQY,KAAR,2BAAkBhD,GAAlB,IAA4BoE,OAAO,SAAD,OAAW7F,SA2B1CkE,IAAWtF,GAAW,2CACtBsF,IAAWpF,GAAY,4BAAIsF,EAAMM,UACjCR,IAAWrF,GAAY,cAAC0C,EAAA,EAAD,CAAWC,OAAQkE,QCxC3CM,EAAWrD,gBAAK,kBACpB,gCAEIsD,EAAetD,gBAAK,kBACxB,gCA+BauD,MA5Bf,WACE,OACE,sBAAKtF,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,WAAD,CAAU+C,SAAU,4CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOP,KAAK,IAAIhB,OAAK,EAArB,SACE,cAAC4D,EAAD,MAGF,cAAC,IAAD,CAAO5C,KAAK,UAAUhB,OAAK,EAA3B,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOgB,KAAK,gBAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,UACE,cAAC6C,EAAD,WAIN,cAAC,IAAD,QC/BNE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.562a5706.chunk.js","sourcesContent":["const Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default Status;\r\n","const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '04333487fae6801ae7461c72fe9ea316';\r\n\r\nconst fetchWithErrorHandling = async (url = '', config = {}) => {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not found'));\r\n};\r\n\r\nexport const fetchTrending = (mediaType = 'movie', timeWindow = 'week') =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/${mediaType}/${timeWindow}?api_key=${API_KEY}`\r\n  );\r\n\r\nexport const searchMoviesByKeyword = (query) =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\r\n  );\r\n\r\nexport const fetchMovieDetails = (movieId) =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\nexport const fetchActors = (movieId) =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\nexport const fetchReviewsForMovie = (movieId) =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n\r\nexport const generateImageURL = (filePath, w = 300) =>\r\n  `https://image.tmdb.org/t/p/w${w}${filePath}`;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__3yhLB\",\"active-link\":\"Navigation_active-link__SKIUY Navigation_link__3yhLB\"};","import PropTypes from 'prop-types';\r\nimport classes from './PageHeading.module.css';\r\n\r\nconst PageHeading = ({ text }) => <h1 className={classes.title}>{text}</h1>;\r\n\r\nPageHeading.propTypes = { text: PropTypes.string.isRequired };\r\n\r\nexport default PageHeading;\r\n","const getIdFromSlug = (slug) => slug.match(/[a-zA-Z0-9]+$/)[0];\r\n\r\nexport default getIdFromSlug;\r\n","import { Link, useLocation } from 'react-router-dom';\r\nimport slugify from 'slugify';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './MovieList.module.css';\r\n\r\nconst makeSlug = (string) => slugify(string, { lower: true });\r\n\r\nconst makeIdentifier = (title, id) => makeSlug(`${title} ${id}`);\r\n\r\nconst MovieList = ({ movies }) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <ul className={classes.list}>\r\n      {movies.map(({ id, title }) => {\r\n        return (\r\n          <li key={id}>\r\n            <p>\r\n              <Link\r\n                to={{\r\n                  pathname: `/movies/${makeIdentifier(title, id)}`,\r\n                  state: { from: location },\r\n                }}\r\n              >\r\n                {title}\r\n              </Link>\r\n            </p>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nMovieList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default MovieList;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageHeading_title__17HsI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"GoBackButton_button__1T4wK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poster\":\"MovieCard_poster__3iBgV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit-button\":\"SearchMoviesForm_submit-button__xt7Qz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MovieList_list__2rI_4\"};","import { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './Navigation.module.css';\r\n\r\nconst Navigation = () => (\r\n  <nav>\r\n    <NavLink\r\n      className={classes.link}\r\n      activeClassName={classes['active-link']}\r\n      to=\"/\"\r\n      exact\r\n    >\r\n      Home\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      className={classes.link}\r\n      activeClassName={classes['active-link']}\r\n      to=\"/movies\"\r\n    >\r\n      Movies\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import PropTypes from 'prop-types';\r\nimport classes from './GoBackButton.module.css';\r\n\r\nconst GoBackButton = ({ onGoBack }) => (\r\n  <button className={classes.button} type=\"button\" onClick={onGoBack}>\r\n    Back\r\n  </button>\r\n);\r\n\r\nGoBackButton.propTypes = { onGoBack: PropTypes.func.isRequired };\r\n\r\nexport default GoBackButton;\r\n","import { lazy, Suspense } from 'react';\r\nimport { Route, useRouteMatch, NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './MovieCard.module.css';\r\nimport * as movieShelfAPI from 'services/movieshelf-api';\r\n\r\nconst CastSubView = lazy(() =>\r\n  import(\r\n    'views/MovieDetailsView/CastSubView' /* webpackChunkName: 'cast-sub-view' */\r\n  )\r\n);\r\n\r\nconst ReviewsSubView = lazy(() =>\r\n  import(\r\n    'views/MovieDetailsView/ReviewsSubView' /* webpackChunkName: 'review-sub-view' */\r\n  )\r\n);\r\n\r\nconst MovieCard = ({\r\n  movie: { poster_path, original_title, overview, genres },\r\n}) => {\r\n  const { url, path } = useRouteMatch();\r\n\r\n  return (\r\n    <article>\r\n      <section>\r\n        <img\r\n          src={movieShelfAPI.generateImageURL(poster_path)}\r\n          alt={original_title}\r\n          className={classes.poster}\r\n        />\r\n        <p>{overview}</p>\r\n      </section>\r\n\r\n      <section>\r\n        <h2>Genres</h2>\r\n        <ul>\r\n          {genres.map((genre) => {\r\n            return <li key={genre.id}>{genre.name}</li>;\r\n          })}\r\n        </ul>\r\n      </section>\r\n\r\n      <section>\r\n        <h2>Additional Information</h2>\r\n\r\n        <Suspense fallback={<h1>Loading...</h1>}>\r\n          <h3>\r\n            <NavLink to={`${url}/cast`}>Cast</NavLink>\r\n          </h3>\r\n          <Route path={`${path}/cast`}>\r\n            <CastSubView />\r\n          </Route>\r\n        </Suspense>\r\n\r\n        <Suspense fallback={<h1>Loading...</h1>}>\r\n          <h3>\r\n            <NavLink to={`${url}/reviews`}>Reviews</NavLink>\r\n          </h3>\r\n          <Route path={`${path}/reviews`}>\r\n            <ReviewsSubView />\r\n          </Route>\r\n        </Suspense>\r\n      </section>\r\n    </article>\r\n  );\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  movie: PropTypes.shape({\r\n    poster_path: PropTypes.string,\r\n    original_title: PropTypes.string.isRequired,\r\n    overview: PropTypes.string,\r\n    genres: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        name: PropTypes.string,\r\n      })\r\n    ),\r\n  }).isRequired,\r\n};\r\n\r\nexport default MovieCard;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams, useLocation, useHistory } from 'react-router-dom';\r\n\r\nimport PageHeading from 'components/PageHeading';\r\nimport * as movieShelfAPI from 'services/movieshelf-api';\r\nimport GoBackButton from 'components/GoBackButton';\r\nimport MovieCard from 'components/MovieCard';\r\nimport getIdFromSlug from 'utils/get-id-from-slug';\r\nimport Status from 'utils/state-machine';\r\nconst { IDLE, PENDING, REJECTED, RESOLVED } = Status;\r\n\r\nconst MovieDetailsView = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { slug } = useParams();\r\n\r\n  const [movie, setMovie] = useState(null);\r\n  const [status, setStatus] = useState(IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n  const movieId = getIdFromSlug(slug);\r\n\r\n  useEffect(() => {\r\n    setStatus(PENDING);\r\n    movieShelfAPI\r\n      .fetchMovieDetails(movieId)\r\n      .then((movie) => {\r\n        setMovie(movie);\r\n        setStatus(RESOLVED);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        setStatus(REJECTED);\r\n      });\r\n  }, [movieId]);\r\n\r\n  const handleGoBack = () => {\r\n    history.push(location?.state?.from ?? '/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageHeading\r\n        text={status === RESOLVED ? movie.original_title : `Movie № ${movieId}`}\r\n      />\r\n      <GoBackButton onGoBack={handleGoBack} />\r\n      {status === PENDING && <p>Loading...</p>}\r\n      {status === REJECTED && <p>{error.message}</p>}\r\n      {status === RESOLVED && <MovieCard movie={movie} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsView;\r\n","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './SearchMoviesForm.module.css';\r\n\r\nconst SearchMoviesForm = ({ onSubmit }) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const handleQueryChange = ({ target: { value } }) => {\r\n    setSearchQuery(value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (searchQuery.trim() === '') {\r\n      return toast.error('Enter some valid search query please.');\r\n    }\r\n\r\n    onSubmit(searchQuery);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={searchQuery}\r\n        onChange={handleQueryChange}\r\n        autoFocus\r\n        placeholder=\"Search movies\"\r\n      />\r\n      <button type=\"submit\" className={classes['submit-button']}>\r\n        Search\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nSearchMoviesForm.propTypes = { onSubmit: PropTypes.func.isRequired };\r\n\r\nexport default SearchMoviesForm;\r\n","import { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport PageHeading from 'components/PageHeading';\r\nimport SearchMoviesForm from 'components/SearchMoviesForm';\r\nimport * as movieShelfAPI from 'services/movieshelf-api';\r\nimport MovieList from 'components/MovieList';\r\nimport Status from 'utils/state-machine';\r\nconst { IDLE, PENDING, REJECTED, RESOLVED } = Status;\r\n\r\nconst MoviesView = () => {\r\n  const [foundMovies, setFoundMovies] = useState(null);\r\n  const [status, setStatus] = useState(IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const handleSubmit = (query) => {\r\n    history.push({ ...location, search: `query=${query}` });\r\n  };\r\n\r\n  const searchQuery = new URLSearchParams(location.search).get('query') ?? '';\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) {\r\n      return;\r\n    }\r\n\r\n    setStatus(PENDING);\r\n    movieShelfAPI\r\n      .searchMoviesByKeyword(searchQuery)\r\n      .then(({ results }) => {\r\n        setFoundMovies(results);\r\n        setStatus(RESOLVED);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        setStatus(REJECTED);\r\n      });\r\n  }, [searchQuery]);\r\n\r\n  return (\r\n    <>\r\n      <PageHeading text=\"Search for Movies\" />\r\n      <SearchMoviesForm onSubmit={handleSubmit} />\r\n      {status === PENDING && <p>Loading...</p>}\r\n      {status === REJECTED && <p>{error.message}</p>}\r\n      {status === RESOLVED && <MovieList movies={foundMovies} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesView;\r\n","import { lazy, Suspense } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Navigation from 'components/Navigation';\r\nimport MovieDetailsView from 'views/MovieDetailsView';\r\nimport MoviesView from 'views/MoviesView';\r\n\r\nconst HomeView = lazy(() =>\r\n  import('views/HomeView' /* webpackChunkName: 'home-view' */)\r\n);\r\nconst NotFoundView = lazy(() =>\r\n  import('views/NotFoundView' /* webpackChunkName: 'not-found-view' */)\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation />\r\n      <Suspense fallback={<h1>Loading...</h1>}>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <HomeView />\r\n          </Route>\r\n\r\n          <Route path=\"/movies\" exact>\r\n            <MoviesView />\r\n          </Route>\r\n\r\n          <Route path=\"/movies/:slug\">\r\n            <MovieDetailsView />\r\n          </Route>\r\n\r\n          <Route>\r\n            <NotFoundView />\r\n          </Route>\r\n        </Switch>\r\n      </Suspense>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}