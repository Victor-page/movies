{"version":3,"sources":["components/Navigation/Navigation.module.css","components/PageHeading/PageHeading.module.css","components/MovieList/MovieList.module.css","components/SearchMoviesForm/SearchMoviesForm.module.css","components/Navigation/Navigation.js","services/movieshelf-api.js","components/PageHeading/PageHeading.js","components/MovieList/MovieList.js","utils/state-machine.js","views/HomeView/HomeView.js","components/SearchMoviesForm/SearchMoviesForm.js","views/MoviesView/MoviesView.js","components/CastList/CastList.js","views/MovieDetailsView/CastSubView/CastSubView.js","components/ReviewsList/ReviewsList.js","views/MovieDetailsView/ReviewsSubView/ReviewsSubView.js","components/MovieCard/MovieCard.js","views/MovieDetailsView/MovieDetailsView.js","views/NotFoundView/NotFoundView.js","App.js","index.js"],"names":["module","exports","Navigation","className","classes","link","activeClassName","to","exact","BASE_URL","API_KEY","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","generateImageURL","filePath","w","PageHeading","text","title","MovieList","movies","list","map","id","Status","IDLE","PENDING","RESOLVED","REJECTED","HomeView","useState","trending","setTrending","status","setStatus","error","setError","useEffect","mediaType","timeWindow","movieShelfAPI","then","results","catch","message","SearchMoviesForm","onSubmit","searchQuery","setSearchQuery","event","preventDefault","trim","toast","type","value","onChange","currentTarget","toLowerCase","autoFocus","placeholder","MoviesView","foundMovies","setFoundMovies","query","setQuery","CastList","cast","name","character","profile_path","src","alt","CastSubView","movieId","useParams","setCast","ReviewsList","reviews","length","path","author","content","avatar_path","author_details","includes","charAt","substring","ReviewsSubView","setReviews","MovieCard","movie","useRouteMatch","poster_path","original_title","overview","genres","genre","MovieDetailsView","setMovie","NotFoundView","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68bf819c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link____PPh\",\"active-link\":\"Navigation_active-link__1Gp0D Navigation_link____PPh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageHeading_title__2HDIr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MovieList_list__EAZFF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit-button\":\"SearchMoviesForm_submit-button__16sYQ\"};","import { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './Navigation.module.css';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        className={classes.link}\r\n        activeClassName={classes['active-link']}\r\n        to=\"/\"\r\n        exact\r\n      >\r\n        Home\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className={classes.link}\r\n        activeClassName={classes['active-link']}\r\n        to=\"/movies\"\r\n      >\r\n        Movies\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '04333487fae6801ae7461c72fe9ea316';\r\n\r\nconst fetchWithErrorHandling = async (url = '', config = {}) => {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not found'));\r\n};\r\n\r\nexport const fetchTrending = (mediaType = 'movie', timeWindow = 'week') =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/${mediaType}/${timeWindow}?api_key=${API_KEY}`\r\n  );\r\n\r\nexport const searchMoviesByKeyword = (query) =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\r\n  );\r\n\r\nexport const fetchMovieDetails = (movieId) =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\nexport const fetchActors = (movieId) =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\nexport const fetchReviewsForMovie = (movieId) =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n\r\nexport const generateImageURL = (filePath, w = 500) =>\r\n  `https://image.tmdb.org/t/p/w${w}${filePath}`;\r\n","import classes from './PageHeading.module.css';\r\n\r\nconst PageHeading = ({ text }) => <h1 className={classes.title}>{text}</h1>;\r\n\r\nexport default PageHeading;\r\n","import { Link } from 'react-router-dom';\r\nimport classes from './MovieList.module.css';\r\n\r\nconst MovieList = ({ movies }) => {\r\n  return (\r\n    <ul className={classes.list}>\r\n      {movies.map(({ id, title }) => {\r\n        return (\r\n          <li key={id}>\r\n            <p>\r\n              <Link to={`/movies/${id}`}>{title}</Link>\r\n            </p>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","const Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default Status;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport * as movieShelfAPI from 'services/movieshelf-api';\r\nimport PageHeading from 'components/PageHeading';\r\nimport MovieList from 'components/MovieList';\r\nimport Status from 'utils/state-machine';\r\n\r\nconst HomeView = () => {\r\n  // const { url } = useRouteMatch();\r\n\r\n  const [trending, setTrending] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setStatus(Status.PENDING);\r\n\r\n    movieShelfAPI\r\n      .fetchTrending()\r\n      .then(({ results: trending }) => {\r\n        setTrending(trending);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PageHeading text=\"Trending This Week\" />\r\n      {status === Status.PENDING && <p>Loading...</p>}\r\n      {status === Status.REJECTED && <p>{error.message}</p>}\r\n      {status === Status.RESOLVED && <MovieList movies={trending} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeView;\r\n","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport classes from './SearchMoviesForm.module.css';\r\n\r\nconst SearchMoviesForm = ({ onSubmit }) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const handleQueryChange = ({ currentTarget: { value } }) => {\r\n    setSearchQuery(value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (searchQuery.trim() === '') {\r\n      return toast.error('Enter some valid search query please.');\r\n    }\r\n\r\n    onSubmit(searchQuery);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={searchQuery}\r\n        onChange={handleQueryChange}\r\n        autoFocus\r\n        placeholder=\"Search movies\"\r\n      />\r\n      <button type=\"submit\" className={classes['submit-button']}>\r\n        Search\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchMoviesForm;\r\n","import { useState, useEffect } from 'react';\r\nimport PageHeading from 'components/PageHeading';\r\nimport SearchMoviesForm from 'components/SearchMoviesForm';\r\nimport * as movieShelfAPI from 'services/movieshelf-api';\r\nimport MovieList from 'components/MovieList';\r\nimport Status from 'utils/state-machine';\r\n\r\nconst MoviesView = () => {\r\n  const [foundMovies, setFoundMovies] = useState(null);\r\n  const [query, setQuery] = useState('');\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = (query) => {\r\n    setQuery(query);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    setStatus(Status.PENDING);\r\n    movieShelfAPI\r\n      .searchMoviesByKeyword(query)\r\n      .then(({ results }) => {\r\n        setFoundMovies(results);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, [query]);\r\n\r\n  return (\r\n    <>\r\n      <PageHeading text=\"Search for Movies\" />\r\n      <SearchMoviesForm onSubmit={handleSubmit} />\r\n      {status === Status.PENDING && <p>Loading...</p>}\r\n      {status === Status.REJECTED && <p>{error.message}</p>}\r\n      {status === Status.RESOLVED && <MovieList movies={foundMovies} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesView;\r\n","import * as movieShelfAPI from 'services/movieshelf-api';\r\n\r\nconst CastList = ({ cast }) => {\r\n  return (\r\n    <ul>\r\n      {cast.map(({ id, name, character, profile_path }) => (\r\n        <li key={id}>\r\n          <p>\r\n            <span>{name}</span>\r\n          </p>\r\n          <img\r\n            src={movieShelfAPI.generateImageURL(profile_path, 200)}\r\n            alt={name}\r\n          />\r\n          <p>\r\n            Character: <span>{character}</span>\r\n          </p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CastList;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as movieShelfAPI from 'services/movieshelf-api';\r\nimport CastList from 'components/CastList';\r\nimport Status from 'utils/state-machine';\r\nconst { PENDING, REJECTED, RESOLVED } = Status;\r\n\r\nconst CastSubView = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [cast, setCast] = useState(null);\r\n  const [status, setStatus] = useState(PENDING);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setStatus(PENDING);\r\n    movieShelfAPI\r\n      .fetchActors(movieId)\r\n      .then(({ cast }) => {\r\n        setCast(cast);\r\n        setStatus(RESOLVED);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        setStatus(REJECTED);\r\n      });\r\n  }, [movieId]);\r\n\r\n  if (status === PENDING) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (status === REJECTED) {\r\n    return <p>{error.message}</p>;\r\n  }\r\n\r\n  if (status === RESOLVED) {\r\n    return <CastList cast={cast} />;\r\n  }\r\n};\r\n\r\nexport default CastSubView;\r\n","import * as movieShelfAPI from 'services/movieshelf-api';\r\n\r\nconst ReviewsList = ({ reviews }) => {\r\n  const deleteFirstCharacter = (string) => string.substring(1);\r\n\r\n  const createSrc = (path) => {\r\n    if (path.includes('gravatar')) {\r\n      if (path.charAt(0) === '/') {\r\n        return deleteFirstCharacter(path);\r\n      }\r\n\r\n      return path;\r\n    }\r\n\r\n    return movieShelfAPI.generateImageURL(path, 200);\r\n  };\r\n\r\n  if (!reviews.length) {\r\n    return <p>We do not have any reviews for this movie.</p>;\r\n  }\r\n\r\n  return (\r\n    <ul>\r\n      {reviews.map(\r\n        ({ id, author, content, author_details: { avatar_path } }) => (\r\n          <li key={id}>\r\n            <p>\r\n              <span>{author}</span>\r\n            </p>\r\n            {avatar_path && <img src={createSrc(avatar_path)} alt={author} />}\r\n            <p>\r\n              \"<span>{content}</span>\"\r\n            </p>\r\n          </li>\r\n        )\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ReviewsList;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ReviewsList from 'components/ReviewsList';\r\nimport * as movieShelfAPI from 'services/movieshelf-api';\r\nimport Status from 'utils/state-machine';\r\nconst { PENDING, REJECTED, RESOLVED } = Status;\r\n\r\nconst ReviewsSubView = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [reviews, setReviews] = useState(null);\r\n  const [status, setStatus] = useState(PENDING);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    movieShelfAPI\r\n      .fetchReviewsForMovie(movieId)\r\n      .then(({ results }) => {\r\n        setReviews(results);\r\n        setStatus(RESOLVED);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        setStatus(REJECTED);\r\n      });\r\n  }, [movieId]);\r\n\r\n  if (status === PENDING) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (status === REJECTED) {\r\n    return <p>{error.message}</p>;\r\n  }\r\n\r\n  if (status === RESOLVED) {\r\n    return <ReviewsList reviews={reviews} />;\r\n  }\r\n};\r\n\r\nexport default ReviewsSubView;\r\n","import { Route, useRouteMatch, NavLink } from 'react-router-dom';\r\nimport CastSubView from 'views/MovieDetailsView/CastSubView';\r\nimport ReviewsSubView from 'views/MovieDetailsView/ReviewsSubView';\r\nimport * as movieShelfAPI from 'services/movieshelf-api';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const { url, path } = useRouteMatch();\r\n\r\n  return (\r\n    <article>\r\n      <section>\r\n        <img\r\n          src={movieShelfAPI.generateImageURL(movie.poster_path)}\r\n          alt={movie.original_title}\r\n        />\r\n        <p>{movie.overview}</p>\r\n      </section>\r\n\r\n      <section>\r\n        <h2>Genres</h2>\r\n        <ul>\r\n          {movie.genres.map((genre) => {\r\n            return <li key={genre.id}>{genre.name}</li>;\r\n          })}\r\n        </ul>\r\n      </section>\r\n\r\n      <section>\r\n        <h2>Additional Information</h2>\r\n\r\n        <h3>\r\n          <NavLink to={`${url}/cast`}>Cast</NavLink>\r\n        </h3>\r\n        <Route path={`${path}/cast`}>\r\n          <CastSubView />\r\n        </Route>\r\n\r\n        <h3>\r\n          <NavLink to={`${url}/reviews`}>Reviews</NavLink>\r\n        </h3>\r\n        <Route path={`${path}/reviews`}>\r\n          <ReviewsSubView />\r\n        </Route>\r\n      </section>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PageHeading from 'components/PageHeading';\r\nimport * as movieShelfAPI from 'services/movieshelf-api';\r\n\r\nimport MovieCard from 'components/MovieCard';\r\nimport Status from 'utils/state-machine';\r\n\r\nconst MovieDetailsView = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [movie, setMovie] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setStatus(Status.PENDING);\r\n    movieShelfAPI\r\n      .fetchMovieDetails(movieId)\r\n      .then((movie) => {\r\n        setMovie(movie);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <PageHeading\r\n        text={\r\n          status === Status.RESOLVED\r\n            ? movie.original_title\r\n            : `Movie № ${movieId}`\r\n        }\r\n      />\r\n      {status === Status.PENDING && <p>Loading...</p>}\r\n      {status === Status.REJECTED && <p>{error.message}</p>}\r\n      {status === Status.RESOLVED && <MovieCard movie={movie} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsView;\r\n","const NotFoundView = () => <h1>404 The page is not found :(</h1>;\r\n\r\nexport default NotFoundView;\r\n","import { Route, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Navigation from 'components/Navigation';\nimport HomeView from 'views/HomeView';\nimport MoviesView from 'views/MoviesView';\nimport MovieDetailsView from 'views/MovieDetailsView';\nimport NotFoundView from 'views/NotFoundView';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomeView />\n        </Route>\n\n        <Route path=\"/movies\" exact>\n          <MoviesView />\n        </Route>\n\n        <Route path=\"/movies/:movieId\">\n          <MovieDetailsView />\n        </Route>\n\n        <Route>\n          <NotFoundView />\n        </Route>\n      </Switch>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}