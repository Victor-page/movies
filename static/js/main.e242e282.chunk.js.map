{"version":3,"sources":["components/Navigation/Navigation.module.css","components/PageHeading/PageHeading.module.css","views/HomeView/HomeView.module.css","components/Navigation/Navigation.js","services/movieshelf-api.js","components/PageHeading/PageHeading.js","views/HomeView/HomeView.js","views/MoviesView/MoviesView.js","views/MovieDetailsView/CastSubView/CastSubView.js","views/MovieDetailsView/ReviewsSubView/ReviewsSubView.js","views/MovieDetailsView/MovieDetailsView.js","views/NotFoundView/NotFoundView.js","App.js","index.js"],"names":["module","exports","Navigation","className","classes","link","activeClassName","to","exact","BASE_URL","API_KEY","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","generateImageURL","filePath","w","PageHeading","text","title","HomeView","useState","moviesResponse","setMoviesResponse","useEffect","mediaType","timeWindow","movieShelfAPI","then","movies","results","list","map","id","MoviesView","type","CastSubView","movieId","useParams","cast","setCast","name","character","ReviewsSubView","reviews","setReviews","path","author","content","avatar_path","author_details","src","includes","charAt","substring","alt","MovieDetailsView","useRouteMatch","movie","setMovie","original_title","poster_path","overview","NotFoundView","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e242e282.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link____PPh\",\"active-link\":\"Navigation_active-link__1Gp0D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageHeading_title__2HDIr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"HomeView_list__3nHTq\"};","import { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './Navigation.module.css';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        className={classes.link}\r\n        activeClassName={classes['active-link']}\r\n        to=\"/\"\r\n        exact\r\n      >\r\n        Main\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className={classes.link}\r\n        activeClassName={classes['active-link']}\r\n        to=\"/movies\"\r\n      >\r\n        Movies\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '04333487fae6801ae7461c72fe9ea316';\r\n\r\nconst fetchWithErrorHandling = async (url = '', config = {}) => {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not found'));\r\n};\r\n\r\nexport const fetchTrending = (mediaType = 'movie', timeWindow = 'week') =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/${mediaType}/${timeWindow}?api_key=${API_KEY}`\r\n  );\r\n\r\nexport const searchMoviesByKeyword = (query) =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\r\n  );\r\n\r\nexport const fetchMovieDetails = (movieId) =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\nexport const fetchActors = (movieId) =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\nexport const fetchReviewsForMovie = (movieId) =>\r\n  fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n\r\nexport const generateImageURL = (filePath, w = 500) =>\r\n  `https://image.tmdb.org/t/p/w${w}${filePath}`;\r\n","import classes from './PageHeading.module.css';\r\n\r\nconst PageHeading = ({ text }) => <h1 className={classes.title}>{text}</h1>;\r\n\r\nexport default PageHeading;\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n  Link,\r\n  // useRouteMatch\r\n} from 'react-router-dom';\r\nimport * as movieShelfAPI from 'services/movieshelf-api';\r\nimport PageHeading from 'components/PageHeading';\r\nimport classes from './HomeView.module.css';\r\n\r\nconst HomeView = () => {\r\n  // const { url } = useRouteMatch();\r\n\r\n  const [moviesResponse, setMoviesResponse] = useState(null);\r\n\r\n  useEffect(() => {\r\n    movieShelfAPI.fetchTrending().then(setMoviesResponse);\r\n  }, []);\r\n\r\n  const movies = moviesResponse?.results && moviesResponse.results;\r\n\r\n  return (\r\n    <>\r\n      <PageHeading text=\"Trending This Week\" />\r\n\r\n      {movies && (\r\n        <ul className={classes.list}>\r\n          {movies.map(({ id, title }) => {\r\n            return (\r\n              <li key={id}>\r\n                <p>\r\n                  <Link to={`/movies/${id}`}>{title}</Link>\r\n                </p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeView;\r\n","import PageHeading from 'components/PageHeading';\r\n\r\nconst MoviesView = () => {\r\n  return (\r\n    <>\r\n      <PageHeading text=\"Search for Movies\" />\r\n      <form>\r\n        <input type=\"text\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesView;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as movieShelfAPI from 'services/movieshelf-api';\r\n\r\nconst CastSubView = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [cast, setCast] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!movieId) {\r\n      return;\r\n    }\r\n\r\n    movieShelfAPI.fetchActors(movieId).then(setCast);\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <ul>\r\n      {cast?.cast &&\r\n        cast.cast.map(({ id, name, character }) => {\r\n          return (\r\n            <li key={id}>\r\n              <p>\r\n                Name: <span>{name}</span>\r\n              </p>\r\n              <p>\r\n                Character: <span>{character}</span>\r\n              </p>\r\n            </li>\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CastSubView;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as movieShelfAPI from 'services/movieshelf-api';\r\n\r\nconst ReviewsSubView = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [reviews, setReviews] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!movieId) {\r\n      return;\r\n    }\r\n\r\n    movieShelfAPI.fetchReviewsForMovie(movieId).then(setReviews);\r\n  }, [movieId]);\r\n\r\n  const deleteFirstCharacter = (string) => string.substring(1);\r\n\r\n  const createSrc = (path) => {\r\n    if (path.includes('gravatar')) {\r\n      if (path.charAt(0) === '/') {\r\n        return deleteFirstCharacter(path);\r\n      }\r\n\r\n      return path;\r\n    }\r\n\r\n    return movieShelfAPI.generateImageURL(path, 200);\r\n  };\r\n\r\n  return reviews?.results ? (\r\n    <ul>\r\n      {reviews.results.map(\r\n        ({ id, author, content, author_details: { avatar_path } }) => {\r\n          return (\r\n            <li key={id}>\r\n              <p>\r\n                <span>{author}</span>\r\n              </p>\r\n              {avatar_path && <img src={createSrc(avatar_path)} alt={author} />}\r\n              <p>\r\n                \"<span>{content}</span>\"\r\n              </p>\r\n            </li>\r\n          );\r\n        }\r\n      )}\r\n    </ul>\r\n  ) : (\r\n    <p>No</p>\r\n  );\r\n};\r\n\r\nexport default ReviewsSubView;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams, Route, useRouteMatch, NavLink } from 'react-router-dom';\r\nimport PageHeading from 'components/PageHeading';\r\nimport * as movieShelfAPI from 'services/movieshelf-api';\r\nimport CastSubView from './CastSubView';\r\nimport ReviewsSubView from './ReviewsSubView';\r\n\r\nconst MovieDetailsView = () => {\r\n  const { url, path } = useRouteMatch();\r\n\r\n  const { movieId } = useParams();\r\n\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    movieShelfAPI.fetchMovieDetails(movieId).then(setMovie);\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <PageHeading text={movie?.original_title || `Movie ${movieId}`} />\r\n      {movie && (\r\n        <>\r\n          <img\r\n            src={movieShelfAPI.generateImageURL(movie.poster_path)}\r\n            alt={movie.original_title}\r\n          />\r\n          <p>{movie.overview}</p>\r\n\r\n          <h2>\r\n            <NavLink to={`${url}/${movieId}/cast`}>Cast</NavLink>\r\n          </h2>\r\n          <Route path={`${path}/:movieId/cast`}>\r\n            <CastSubView />\r\n          </Route>\r\n\r\n          <h2>\r\n            <NavLink to={`${url}/${movieId}/reviews`}>Reviews</NavLink>\r\n          </h2>\r\n          <Route path={`${path}/:movieId/reviews`}>\r\n            <ReviewsSubView />\r\n          </Route>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsView;\r\n","const NotFoundView = () => <h1>404 The page is not found :(</h1>;\r\n\r\nexport default NotFoundView;\r\n","import { Route, Switch } from 'react-router-dom';\nimport Navigation from 'components/Navigation';\nimport HomeView from 'views/HomeView';\nimport MoviesView from 'views/MoviesView';\nimport MovieDetailsView from 'views/MovieDetailsView';\nimport NotFoundView from 'views/NotFoundView';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomeView />\n        </Route>\n\n        <Route path=\"/movies\" exact>\n          <MoviesView />\n        </Route>\n\n        <Route path=\"/movies/:movieId\">\n          <MovieDetailsView />\n        </Route>\n\n        <Route>\n          <NotFoundView />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}